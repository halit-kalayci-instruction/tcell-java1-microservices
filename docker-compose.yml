services:
  discovery-server:
    build: ./discoveryserver
    ports:
      - "8888:8888"
    networks:
      - common
  gateway-server:
    build: ./gatewayserver
    ports:
      - "8001:8001"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8888/eureka/
      - EUREKA_URL=http://discovery-server:8888
    depends_on:
      - discovery-server
    networks:
      - common
  config-server:
    build: ./configserver
    ports:
      - "8079:8079"
    networks:
      - common
  customer-service:
    build:
      context: ./customerservice
      args:
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    ports:
      - "8083:8083"
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    # kubernetes
    restart: on-failure # her hata aldığında
    #restart: unless-stopped # kullanıcı dışı bir şekilde durduysa
    #restart: always # kullanıcı dahil herhangi bir şekilde durduysa
    depends_on:
      - postgres
      - discovery-server
      - config-server
    networks:
      - common
  order-service:
    build: ./orderservice
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:root@mongodb:27017/orderservice?authSource=admin
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8888/eureka/
    depends_on:
      - mongodb
      - discovery-server
    networks:
      - common
  mongodb:
    image: mongo
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes:
      - mongo-volume:/data/db
    networks:
      - common
  postgres:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=test
    volumes:
      - C:/PostgreSQL:/var/lib/postgresql/data  # local dosyaların kullanılması.
    networks:
      - common
  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  kafka-manager:
    image: hlebalbau/kafka-manager
    ports:
      - 9000:9000
    environment:
      ZK_HOSTS: zookeeper:2181
    depends_on:
      - kafka


volumes:
  postgresql-volume:
    name: postgresql-volume
  mongo-volume:
    name: mongo-volume

networks:
  common:
    driver: bridge


# Volume Bind Mount
# Remote Repository Push
# SRS Kafka ?
# 7:45